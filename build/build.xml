<?xml version="1.0"?>
<project name="Reflex Build" basedir="../" default="lib">

	<!-- Define variables/paths used in this build script -->
	<property file="./build/build.properties" />
	<property name="FLEX_HOME" value="${flex-sdk.dir}" />
	
	<!-- Define tasks used in this build script -->
	<taskdef resource="flexTasks.tasks" classpath="${flex-sdk.dir}/ant/lib/flexTasks.jar"/>
	
	<taskdef name="pmd" classname="com.adobe.ac.pmd.ant.FlexPmdAntTask" classpath="${flex-pmd.pmd}/flex-pmd-ant-task-${flex-pmd.version}.jar">
		<classpath>
			<fileset dir="${flex-pmd.pmd}">
				<include name="**/*.jar" />
			</fileset>
		</classpath>
	</taskdef>
	
	<taskdef name="cpd" classname="com.adobe.ac.cpd.ant.FlexCpdAntTask" classpath="${flex-pmd.cpd}/flex-pmd-cpd-ant-task-${flex-pmd.version}.jar">
		<classpath>
			<fileset dir="${flex-pmd.cpd}">
				<include name="**/*.jar" />
			</fileset>
		</classpath>
	</taskdef>
	
	<taskdef name="metrics" classname="com.adobe.ac.pmd.metrics.ant.FlexMetricsAntTask" classpath="${flex-pmd.metrics}/flex-pmd-metrics-ant-task-${flex-pmd.version}.jar">
		<classpath>
			<fileset dir="${flex-pmd.metrics}">
				<include name="**/*.jar" />
			</fileset>
		</classpath>
	</taskdef>
	
	<!--
		Have you edited the properties file to make sure the paths are right on your system?
	-->
	<target name="properties">
		<fail unless="asdoc.exe">The "asdoc.exe" property must be set in ${build.dir}/build.properties.</fail>
		<fail unless="compc.exe">The "compc.exe" property must be set in ${build.dir}/build.properties.</fail>
		<fail unless="mxmlc.exe">The "mxmlc.exe" property must be set in ${build.dir}/build.properties.</fail>
	</target>
	
	<target name="clean">
		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${bin.dir}" defaultexcludes="false">
				<include name="**/*"/>
			</fileset>
			<fileset dir="${docs.dir}" defaultexcludes="false">
				<include name="**/*"/>
			</fileset>
			<fileset dir="${reports.dir}" defaultexcludes="false">
				<include name="**/*"/>
			</fileset>
		</delete>
	</target>
	
	<!--
		Compile all of the classes under the "src" tree into a .swc file
	-->
	<target name="lib" depends="properties">
		<compc output="${bin.dir}/${library.name}.swc" link-report="${reports.dir}/link-report.xml">
			<!--<load-config filename="${basedir}/build/build-config.xml"/>-->
			<source-path path-element="${src.dir}"/>
			<namespace uri="http://reflex.io/2010" manifest="${src.dir}/manifest.xml" />
			<include-namespaces>http://reflex.io/2010</include-namespaces>
			<strict>true</strict>
			<optimize>true</optimize>
			<warnings>true</warnings>
			<external-library-path dir="${flex-sdk.dir}/frameworks/libs/player/${flex-sdk.player}" append="true">
				<include name="playerglobal.swc" />
			</external-library-path>
			<library-path dir="${flex-sdk.dir}/frameworks" append="true">
				<include name="libs/*.swc" />
				<include name="locale/${flex-sdk.locale}/*.swc" />
			</library-path>
			<library-path dir="libs" append="true">
				<include name="*.swc" />
			</library-path>
		</compc>
	</target>
	
	<!--
		Generate ASDoc output for the library
	-->
	<target name="docs" depends="properties">
		
		<!-- Clean out the contents of the doc directory, without delete "docs" -->
		<delete includeemptydirs="true">
			<fileset dir="${docs.dir}" includes="**/*" />
		</delete>
		
		<exec executable="${asdoc.exe}" spawn="no">
			<!-- Place the documentation in the "docs" directory -->
			<arg line="-o '${docs.dir}'" />
			
			<!-- Include in the corelib.swc in the class path -->
			<arg line="-l 'libs'" />
			<arg line="-l '${flex-sdk.dir}/frameworks/libs'" />
			
			<!-- Specify the main source path as "src" -->
			<arg line="-sp '${src.dir}'" />
			
			<!-- Document all of the classes in the "src" tree -->
			<arg line="-ds '${src.dir}'" />
			
			<!-- Include the library name in the window title -->
			<arg line="-window-title '${library.name}' "/>
		</exec>
	</target>
	
	<target name="link-report">
		<xslt in="${link-report.dir}/${link-report.name}.xml" out="${link-report.dir}/${link-report.name}.html" style="${link-report.xsl}" />
	</target>
	
	<target name="pmd-report">
		<pmd sourceDirectory="${src.dir}" outputDirectory="${pmd-report.dir}" />
	</target>
	
	<target name="cpd-report">
		<cpd minimumTokenCount="50" outputFile="${cpd-report.dir}/{cpd-report.name}.xml">
			<fileset dir="${src.dir}">
				<include name="**/*.as"/>
				<include name="**/*.mxml"/>
			</fileset>
		</cpd>
	</target>
	
	<target name="metrics-report">
		<metrics sourcedirectory="${src.dir}" outputfile="${metrics-report.dir}/{metrics-report.name}.xml" />
	</target>
	
</project>